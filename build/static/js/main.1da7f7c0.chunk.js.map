{"version":3,"sources":["Drag.js","index.js"],"names":["Components","_id","title","status","labels","labelsMap","new","Canvas1","Canvas2","Canvas3","classes","board","display","margin","width","fontFamily","column","minWidth","height","backgroundColor","columnHead","textAlign","padding","fontSize","color","item","cursor","Drag","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","id","state","Component","find","ComponentIndex","indexOf","newComponents","defineProperty","$set","console","log","setState","_this2","react_default","a","createElement","className","style","map","channel","Drag_DragColumn","filter","Drag_DragItem","onDrop","React","DragDropContext","HTML5Backend","DragColumn","connectDropTarget","children","DropTarget","drop","name","connect","monitor","dropTarget","isOver","canDrop","DragItem","connectDragSource","DragSource","beginDrag","endDrag","getItem","dropResult","getDropResult","dragSource","isDragging","App","src_Drag","float","marginRight","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1da7f7c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { DragDropContext, DropTarget, DragSource } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst Components = [\r\n  { _id: 1, title: \"First Component\", status: \"Components\" },\r\n  { _id: 2, title: \"Second Component\", status: \"Components\" },\r\n  { _id: 3, title: \"Third Component\", status: \"Components\" },\r\n  { _id: 4, title: \"Fourth Component\", status: \"Components\" },\r\n  { _id: 5, title: \"Fifth Component\", status: \"Components\" },\r\n  { _id: 6, title: \"Sixth Component\", status: \"Components\" },\r\n  { _id: 7, title: \"Seventh Component\", status: \"Components\" },\r\n  { _id: 8, title: \"Eighth Component\", status: \"Components\" },\r\n  { _id: 9, title: \"Ninth Component\", status: \"Components\" },\r\n  { _id: 10, title: \"Tenth Component\", status: \"Components\" },\r\n];\r\n\r\nconst labels = [\"Components\", \"new\", \"Canvas1\", \"Canvas2\", \"Canvas3\"];\r\nconst labelsMap = {\r\n  Components: \"Components\",\r\n  new: \"Blank Space\",\r\n  Canvas1: \"Canvas1\",\r\n  Canvas2: \"Canvas\",\r\n  Canvas3: \"Canvas3\",\r\n\r\n  \r\n};\r\n\r\nconst classes = {\r\n  board: {\r\n    display: \"flex\",\r\n    margin: \"0 auto\",\r\n    width: \"90vw\",\r\n    fontFamily: 'Arial, \"Helvetica Neue\", sans-serif',\r\n  },\r\n  column: {\r\n    minWidth: 200,\r\n    width: \"18vw\",\r\n    height: \"80vh\",\r\n    margin: \"0 auto\",\r\n    backgroundColor: \"#566573\",\r\n  },\r\n  columnHead: {\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n    fontSize: \"1.2em\",\r\n    backgroundColor: \"#7F8C8D\",\r\n    color: \"white\",\r\n  },\r\n  item: {\r\n    padding: 10,\r\n    margin: 10,\r\n    fontSize: \"0.8em\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\n\r\nclass Drag extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Components,\r\n    };\r\n  }\r\n  update = (id, status) => {\r\n    const { Components } = this.state;\r\n    const Component = Components.find((Component) => Component._id === id);\r\n    // console.log(\"Component\", Component);\r\n    Component.status = status;\r\n    const ComponentIndex = Components.indexOf(Component);\r\n    const newComponents = update(Components, {\r\n      [ComponentIndex]: { $set: Component },\r\n    });\r\n    console.log(\"newComponent\", newComponents);\r\n    this.setState({ Components: newComponents });\r\n  };\r\n\r\n  render() {\r\n    const { Components } = this.state;\r\n    return (\r\n      <main>\r\n        <header className=\"header\">Example Drag Board </header>\r\n        <section style={classes.board}>\r\n          {labels.map((channel) => (\r\n            <DragColumn status={channel}>\r\n              <div style={classes.column}>\r\n                <div style={classes.columnHead}>{labelsMap[channel]}</div>\r\n                <div>\r\n                  {Components\r\n                    .filter((item) => item.status === channel)\r\n                    .map((item) => (\r\n                      <DragItem id={item._id} onDrop={this.update}>\r\n                        <div style={classes.item}>{item.title}</div>\r\n                      </DragItem>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            </DragColumn>\r\n          ))}\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropContext(HTML5Backend)(Drag);\r\n\r\n// Column\r\n\r\nconst boxTarget = {\r\n  drop(props) {\r\n    return { name: props.status };\r\n  },\r\n};\r\n\r\nclass DragColumn extends React.Component {\r\n  render() {\r\n    return this.props.connectDropTarget(<div>{this.props.children}</div>);\r\n  }\r\n}\r\n\r\nDragColumn = DropTarget(\"DragItem\", boxTarget, (connect, monitor) => ({\r\n  connectDropTarget: connect.dropTarget(),\r\n  isOver: monitor.isOver(),\r\n  canDrop: monitor.canDrop(),\r\n}))(DragColumn);\r\n\r\n// Item\r\n\r\nconst boxSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      name: props.id,\r\n    };\r\n  },\r\n\r\n  endDrag(props, monitor) {\r\n    const item = monitor.getItem();\r\n    const dropResult = monitor.getDropResult();\r\n    if (dropResult) {\r\n      props.onDrop(monitor.getItem().name, dropResult.name);\r\n    }\r\n  },\r\n};\r\n\r\nclass DragItem extends React.Component {\r\n  render() {\r\n    return this.props.connectDragSource(<div>{this.props.children}</div>);\r\n  }\r\n}\r\n\r\nDragItem = DragSource(\"DragItem\", boxSource, (connect, monitor) => ({\r\n  connectDragSource: connect.dragSource(),\r\n  isDragging: monitor.isDragging(),\r\n}))(DragItem);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Drag from \"./Drag\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Drag/>\r\n      <button style={{float:'right',marginRight:'77px',width:'10%',height:'5vh'}}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}